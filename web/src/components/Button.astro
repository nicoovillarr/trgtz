---
interface Props {
  link?: string;
  newTab?: boolean;
  type?: "special" | "primary" | "secondary" | "tertiary";
  outlined?: boolean;
}

const {
  link = "",
  newTab = true,
  type = "primary",
  outlined = true,
} = Astro.props;

const classes = {
  special:
    "bg-gradient-to-tr from-primary to-pinky px-6 py-1 rounded-full text-white hover:scale-105",
  primary:
    "bg-primary text-white border-primary rounded-sm hover:bg-primary-light hover:border-primary-light",
  secondary:
    "bg-gray-200 text-gray-800 border-gray-200 rounded-sm hover:bg-gray-300 hover:border-gray-300",
  tertiary: `bg-transparent text-primary rounded-sm hover:bg-gray-100 ${outlined ? "border-primary" : "border-transparent"}`,
};

const styles = `flex items-center gap-x-2 px-4 py-2 text-sm border transition-all ${classes[type]}`;
const isLink = !!link && link != "";
---

{
  !isLink && (
    <button class={styles}>
      <slot />
    </button>
  )
}
{
  isLink && (
    <a
      href={link}
      target={newTab ? "_blank" : "_self"}
      referrerpolicy="no-referrer"
      class={styles}
    >
      <slot />
    </a>
  )
}
